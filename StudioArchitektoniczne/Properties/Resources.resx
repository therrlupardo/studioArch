<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Program_CustomGenerator_Witaj_w_generatorze_danych_do_studia_architektonicznego_" xml:space="preserve">
    <value>Witaj w generatorze danych do studia architektonicznego!</value>
  </data>
  <data name="Program_CustomGenerator_Zacznijmy_do_okresu_t0_t1_" xml:space="preserve">
    <value>Zacznijmy do okresu t0-t1:</value>
  </data>
  <data name="Program_CustomGenerator_Ilu_klientów_ma_zostać_wygenerowanych_" xml:space="preserve">
    <value>Ilu klientów ma zostać wygenerowanych?</value>
  </data>
  <data name="Program_CustomGenerator_Ilu_architektów_ma_zostać_wygenerowanych_" xml:space="preserve">
    <value>Ilu architektów ma zostać wygenerowanych?</value>
  </data>
  <data name="Program_CustomGenerator_Ile_projektów_ma_zostać_wygenerowanych_" xml:space="preserve">
    <value>Ile projektów ma zostać wygenerowanych?</value>
  </data>
  <data name="Program_CustomGenerator_Ile_nadzorów_ma_zostać_wygenerowanych_" xml:space="preserve">
    <value>Ile nadzorów ma zostać wygenerowanych?</value>
  </data>
  <data name="Program_CustomGenerator_Ile_zewnętrznych_podmiotów_ma_zostać_wygenerowanych_" xml:space="preserve">
    <value>Ile zewnętrznych podmiotów ma zostać wygenerowanych?</value>
  </data>
  <data name="Program_CustomGenerator_Ile_zewnętrznych_projektów_ma_zostać_wygenerowanych_" xml:space="preserve">
    <value>Ile zewnętrznych projektów ma zostać wygenerowanych?</value>
  </data>
  <data name="Program_CustomGenerator_BreakLine" xml:space="preserve">
    <value>=====================================</value>
  </data>
  <data name="Program_CustomGenerator_Przejdźmy_do_okresu_t1_t2_" xml:space="preserve">
    <value>Przejdźmy do okresu t1-t2:</value>
  </data>
  <data name="Program_CustomGenerator_Teraz_zostaną_wygenerowane_dane__Proszę_czekać" xml:space="preserve">
    <value>Teraz zostaną wygenerowane dane. Proszę czekać</value>
  </data>
  <data name="Generator_Architects_Csv_Header" xml:space="preserve">
    <value>Identyfikator pracownika,Imię,Nazwisko,Data urodzenia,Telefon,Identyfikator kontraktu,Uprawnienia do nadzoru,Pesel</value>
  </data>
  <data name="Generator_OuterProjects_Csv_Header" xml:space="preserve">
    <value>Identyfikator projektu,Nazwa projektu,Identyfikator podmiotu,Rodzaj projektu,Koszt,Data rozpoczęcia,Data zakończenia,Identyfikator projektu architektonicznego</value>
  </data>
  <data name="Generator_OuterSubjects_Csv_Header" xml:space="preserve">
    <value>Identyfikator podmiotu,Imię,Nazwisko,Numer telefonu</value>
  </data>
  <data name="Global_Data_Path" xml:space="preserve">
    <value>../../../data/</value>
  </data>
  <data name="Global_Random_Seed" xml:space="preserve">
    <value>2137</value>
  </data>
</root>